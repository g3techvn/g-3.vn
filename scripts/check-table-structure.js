const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Missing Supabase environment variables');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function checkTableStructures() {
  console.log('üîç KI·ªÇM TRA C·∫§U TR√öC CHI TI·∫æT C√ÅC B·∫¢NG QUAN TR·ªåNG CHO CHECKOUT\n');

  // Ki·ªÉm tra t·ª´ng b·∫£ng quan tr·ªçng
  const tablesToCheck = ['orders', 'order_items', 'vouchers', 'user_profiles', 'user_rewards', 'voucher_usages'];

  for (const tableName of tablesToCheck) {
    await checkSingleTable(tableName);
  }

  console.log('\nüìã T√ìM T·∫ÆT C√ÅC B·∫¢NG C·∫¶N T·∫†O CHO CHECKOUT:');
  console.log('=' * 50);
  console.log('‚ùå users - C·∫ßn t·∫°o b·∫£ng users ho·∫∑c s·ª≠ d·ª•ng user_profiles');
  console.log('‚ùå shipping_addresses - C·∫ßn t·∫°o b·∫£ng ƒë·ªãa ch·ªâ giao h√†ng');
  console.log('‚ùå payment_methods - C·∫ßn t·∫°o b·∫£ng ph∆∞∆°ng th·ª©c thanh to√°n');
  console.log('‚ùå shipping_carriers - C·∫ßn t·∫°o b·∫£ng nh√† v·∫≠n chuy·ªÉn');
}

async function checkSingleTable(tableName) {
  try {
    console.log(`üîç KI·ªÇM TRA B·∫¢NG: ${tableName.toUpperCase()}`);
    console.log('='.repeat(40));

    // L·∫•y sample data
    const { data, error } = await supabase
      .from(tableName)
      .select('*')
      .limit(1);

    if (error) {
      console.log(`‚ùå L·ªói: ${error.message}\n`);
      return;
    }

    if (data && data.length > 0) {
      const fields = Object.keys(data[0]);
      console.log(`‚úÖ B·∫£ng c√≥ d·ªØ li·ªáu (${fields.length} tr∆∞·ªùng):`);
      fields.forEach(field => console.log(`  - ${field}`));
    } else {
      console.log(`üìù B·∫£ng tr·ªëng - c·∫ßn sample data ƒë·ªÉ ki·ªÉm tra c·∫•u tr√∫c`);
    }

    console.log('\n');

  } catch (err) {
    console.log(`‚ùå L·ªói: ${err.message}\n`);
  }
}

// Ch·∫°y script
checkTableStructures()
  .then(() => {
    console.log('‚úÖ Ho√†n th√†nh ki·ªÉm tra!');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\n‚ùå L·ªói:', error);
    process.exit(1);
  }); 